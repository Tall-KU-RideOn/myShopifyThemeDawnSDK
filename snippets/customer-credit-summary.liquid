<!-- Add this to your theme.liquid or a specific page template -->
<customer-credit-summary></customer-credit-summary>

<script type="module">
  class CustomerCreditSummary extends HTMLElement {
    selectors = {
      loader: '.credits-loader',
      table: '.credits-table',
    };

    constructor() {
      super();
      this.loadCredits();
    }

    async login() {
      this.session = await recharge.auth.loginShopifyAppProxy();
    }

    async loadCredits() {
      this.setLoading(true);
      try {
        await this.login();
        const customerId = {{ customer.id | json }};
        const response = await fetch(`https://api.rechargeapps.com/customers/${customerId}/credit_summary`, {
          method: 'GET',
          headers: {
            'X-Recharge-Access-Token': 'YOUR_RECHARGE_API_KEY',
            'Content-Type': 'application/json',
          },
        });

        const data = await response.json();
        if (data.credits) {
          const tableBody = this.querySelector(`${this.selectors.table} tbody`);
          if (!tableBody) return;
          data.credits.forEach(credit => {
            tableBody.append(this.createRow(credit));
          });
        } else {
          this.displayMessage('No credits available.');
        }
      } catch (error) {
        console.error('Error fetching credit summary:', error);
        this.displayMessage('Error fetching credit summary.');
      }
      this.setLoading(false);
    }

    setLoading(value) {
      const loader = this.querySelector(this.selectors.loader);
      if (!value && loader) {
        loader.remove();
      } else if (value) {
        const loadingEl = document.createElement('div');
        loadingEl.classList.add(this.selectors.loader.split('.')[1]);
        this.append(loadingEl);
      }
    }

    displayMessage(message) {
      const messageEl = document.createElement('div');
      messageEl.textContent = message;
      this.append(messageEl);
    }

    createRow(credit) {
      const row = document.createElement('tr');

      const typeCol = document.createElement('td');
      typeCol.classList.add('type');
      typeCol.innerHTML = credit.type;
      row.append(typeCol);

      const amountCol = document.createElement('td');
      amountCol.classList.add('amount');
      amountCol.innerHTML = credit.amount;
      row.append(amountCol);

      const dateCol = document.createElement('td');
      dateCol.classList.add('date');
      dateCol.innerHTML = new Date(credit.created_at).toLocaleDateString();
      row.append(dateCol);

      return row;
    }
  }

  customElements.define('customer-credit-summary', CustomerCreditSummary);
</script>

<style>
  .credits-loader {
    text-align: center;
    padding: 1rem;
    font-size: 1.2rem;
  }

  .credits-table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 1rem;
  }

  .credits-table th,
  .credits-table td {
    border: 1px solid #ddd;
    padding: 8px;
  }

  .credits-table th {
    background-color: #f4f4f4;
    text-align: left;
  }

  .credits-table tr:nth-child(even) {
    background-color: #f9f9f9;
  }

  .credits-table tr:hover {
    background-color: #f1f1f1;
  }
</style>
