<section class="next-orders">
  <div>
    <h2>Your Next Orders</h2>
    <account-next-orders>
      <table class="orders-table">
        <thead>
          <tr>
            <td>ID</td>
            <td>Product</td>
            <td>Quantity</td>
            <td>Price</td>
          </tr>
        </thead>
        <tbody></tbody>
      </table>
      <div class="orders-loader">
        <div class="orders-loader__spinner"><span class="visually-hidden">Loading...</span></div>
      </div>
    </account-next-orders>
  </div>
</section>

<script>
  class AccountNextOrders extends HTMLElement {
    selectors = {
      loader: '.orders-loader',
      table: '.orders-table',
    };

    constructor() {
      super();
      this.loadNextOrders();
    }

    async login() {
      this.session = await recharge.auth.loginShopifyAppProxy();
    }

    async loadNextOrders() {
      this.setLoading(true);
      await this.login();

      try {
        const response = await recharge.charge.listCharges(this.session, {limit: 1, sort_by: 'id-desc',});
        console.log('Full Response:', response); // Log the full response

        const orders = response.charges;
        console.log('Next Orders Data:', orders); // Print response to the console

        if (orders && orders.length > 0) {
          this.populateOrders(orders);
        } else {
          console.log('No orders found');
        }
      } catch (error) {
        console.error('Error fetching next orders:', error);
      }

      this.setLoading(false);
    }

    populateOrders(orders) {
      const tableBody = this.querySelector(`${this.selectors.table} tbody`);
      if (!tableBody) {
        console.error('Table body not found');
        return;
      }

      orders.forEach(order => {
        tableBody.append(this.createRow(order));
      });
    }

    createRow(order) {
      const tr = document.createElement('tr');
      tr.innerHTML = `
        <td>${order.id}</td>
        <td>${order.line_items[0].title}</td>
        <td>${order.line_items[0].quantity}</td>
        <td>${order.line_items[0].price}</td>
      `;
      console.log('Appending row:', tr); // Log the row being appended
      return tr;
    }

    setLoading(isLoading) {
      const loader = this.querySelector(this.selectors.loader);
      loader.style.display = isLoading ? 'block' : 'none';
    }
  }

  customElements.define('account-next-orders', AccountNextOrders);
</script>
