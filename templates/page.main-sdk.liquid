{% if customer %}
  <section class="recent-orders">
    <h2>Your Recent Orders</h2>
    <account-recent-orders>
      <table class="orders-table">
        <thead>
          <tr>
            <td>Address ID</td>
            <td>Order ID</td>
            <td>Total Price</td>
            <td>Date</td>
          </tr>
        </thead>
        <tbody></tbody>
      </table>
      <div class="orders-loader">
        <div class="orders-loader__spinner"><span class="visually-hidden">Loading...</span></div>
      </div>
    </account-recent-orders>
  </section>

  <script>
    class AccountNewOrders extends HTMLElement {
    selectors = {
      loader: '.orders-loader',
      table: '.orders-table',
    };

    constructor() {
      super();
      this.loadNextOrders();
    }

    async login() {
      this.session = await recharge.auth.loginShopifyAppProxy();
    }

    async loadNextOrders() {
      this.setLoading(true);
      await this.login();

      try {
        const response = await recharge.charge.listCharges(this.session, {
          limit: 1,
          status: 'queued',
          include: ["customer", "charge_activities", "metafields", "payment_methods"]
        });
          console.log('Recent Orders: ', response.charges)
          const orders = response.charges;

          if (orders && orders.length > 0) {
            this.populateOrders(orders);
          } else {
            console.log('No recent orders found');
          }
        } catch (error) {
          console.error('Error fetching recent orders:', error);
        }

        this.setLoading(false);
      }

      populateOrders(orders) {
        const tableBody = this.querySelector(`${this.selectors.table} tbody`);
        if (!tableBody) {
          console.error('Table body not found');
          return;
        }

        orders.forEach(order => {
          tableBody.append(this.createRow(order));
        });
      }

      createRow(order) {
        const tr = document.createElement('tr');
        tr.innerHTML = `
          <td>${order.address_id}</td>
          <td>${order.id}</td>
          <td>${order.total_price}</td>
          <td>${new Date(order.created_at).toLocaleDateString()}</td>
        `;
        console.log('Appending row:', tr); // Log the row being appended
        return tr;
      }

      setLoading(isLoading) {
        const loader = this.querySelector(this.selectors.loader);
        loader.style.display = isLoading ? 'block' : 'none';
      }
    }

    customElements.define('account-recent-orders', AccountRecentOrders);
  </script>
{% else %}
  <p>You must be logged in to view this page.</p>
  <a href="{{ routes.account_login_url }}">Log in</a>
{% endif %}
